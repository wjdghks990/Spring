<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="photo">

	<select id="photo_list" resultType="photo"><!-- db.vo.PhotoVo -->
		select * from photo order by p_idx desc
	</select>
	
	<select id="photo_one" resultType="photo" parameterType="int">
		select * from photo where p_idx=#{ p_idx }
	</select>
	
	<insert id="photo_insert" parameterType="photo">
		insert into photo values(seq_photo_idx.nextVal,
								 #{ p_title },
								 #{ p_content },
								 #{ p_filename },
								 #{ p_ip },
								 sysdate,
								 #{ mem_idx },
								 #{ mem_name })
	</insert>
	
	<delete id="photo_delete" parameterType="int">
		delete from photo where p_idx=#{ p_idx }
	</delete>
	
	<update id="photo_update_filename" parameterType="photo">
		update photo set p_filename=#{ p_filename } where p_idx=#{ p_idx }
	</update>
	
	<update id="photo_update" parameterType="photo">
		update photo set p_title= #{ p_title }, p_content=#{ p_content } where p_idx=#{ p_idx }
	</update>
	
	<!-- Paging별 조회 -->
    <select id="photo_list_page" parameterType="Map" resultType="photo">
		select * from 
		(
		select
			rank() over(order by p_idx desc) as no,
			p.* 
		from 
			(select * from photo) p 
		)	
		where no between #{ start } and #{ end }
    </select>
    
    <!-- 전체레코드수 구하기 -->
    <select id="photo_row_total" resultType="int">
    	select nvl(count(*),0) from photo
    </select>
    
    
</mapper>












